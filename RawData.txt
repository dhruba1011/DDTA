Q1. 
Create a database named - SchoolDB
create a table named Students with the following structure:

StudentID (INT, Primary Key, Auto Increment)
FullName (VARCHAR(100), NOT NULL)
DOB (DATE, NOT NULL)
Gender (ENUM('Male', 'Female'), NOT NULL)
Email (VARCHAR(100), UNIQUE)
Phone (VARCHAR(15), NOT NULL)

1) Insert at least 5 records into the Students tables.
2) Insert at least 2 records into the Students tables to Insert only StudentID.FullName and DOB.
3) write a query to add 2 records from a single query.
4) Display all records.
5) Display only name,dob,gender of all students.
6) Show only record whose StudentID is - 22.
7) Display only Female Students.
8) Display only Male students whose Name starts with M.
9) Show students born after 2005.


Q2. 
Create a database named - YCTC
create a table named Students with the following structure:

REGNO (varchar(30), Primary Key)
Name (VARCHAR(100), NOT NULL)
COURSE (VARCHAR(50), NOT NULL)
BATCH (int, NOT NULL)
FEES (int , NOT NULL)
DURATION (varchar(20))

1) Insert 10 records in the table.
2) Count total number of students.
3) Update BATCH as 24005 whose Course is CDTA.
4) Update Fees as 5000 whose Batch is 34002.
5) Update Duration as 7 month whose COURSE is DDTA and batch is 34006 and 34007.
6) Add Fees 500 to all students.
7) Reduce FEEs 400 who are not in CFAS course.
8) Update the COURSE of student SUMIT SEN to ADFAS.
9) Delete all students whose course is DFAS and Fees is 4000.


Q3. 
Create a database named - YOUTH
create a table named STUDENT with the following structure:

REGNO (varchar(30))
Name (VARCHAR(100))
COURSE (VARCHAR(50))
BATCH (int)

1) Add another field (MARKS - int) at the end.
2) Change the Field name REGNO to Registration.
3) Add another field (ADDRESS -varchar(30)) after name.
4) Make Course and Batch not null.
5) Delete the Field batch.




Q4.
Course Table Design and Queries
Database: AcademyDB
Table: Courses
    CourseID INT PRIMARY KEY AUTO_INCREMENT,
    CourseName VARCHAR(100) NOT NULL,
    Duration INT ,
    Fee INT NOT NULL

1) Insert 5 courses with name, duration, and fee.
2) Update fee of "DTP" course to 4000.
3) Display all courses with duration more than 6 months.
4) Delete course "FA" if exists.
5) Add a new column Instructor (VARCHAR(100)) after CourseName.


Q5. 
Database: ResultsDB
Table: Marks

    StudentID INT,
    Subject VARCHAR(50),
    MarksObtained INT

1) Insert at least 6 records for 3 different students.
2) Display all marks for student ID 101.
3) Update marks in "Maths" to 95 for student ID 102.
4) Delete records for student ID 103.
5) Add column Grade (CHAR(2)) at the end of the table.


Q6.
Database: CollegeDB
Tables: Students, Courses, Enrollments

Students
    StudentID INT PRIMARY KEY AUTO_INCREMENT
    FullName VARCHAR(100)

Courses 
    CourseID INT PRIMARY KEY AUTO_INCREMENT,
    CourseName VARCHAR(100)

Enrollments 
    EnrollmentID INT AUTO_INCREMENT PRIMARY KEY,
    StudentID INT,
    CourseID INT,
    EnrollDate DATE,
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)

1) Insert 3 students and 3 courses.
2) Insert enrollment records mapping students to courses.
3) Use JOIN to display: Student Name, Course Name, and Enroll Date.
4) Display students who are not enrolled in any course (using LEFT JOIN).
5) Delete an enrollment record by EnrollmentID.